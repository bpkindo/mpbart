setwd(paste0(ProjectLibrary,"/mpbart/R"))
devtools::load_all()
devtools::document()
set.seed(64)
library(mpbart)
p=3
train_wave = mlbench.waveform(300)
test_wave = mlbench.waveform(500)
traindata = data.frame(train_wave$x, y = train_wave$classes)
testdata = data.frame(test_wave$x, y = test_wave$classes)
sigma0 = diag(p-1)
burn = 100
ndraws <- 200 # a higher number such as 1500 is better#'#
Mcmc1=list(sigma0=sigma0, burn = burn, ndraws = ndraws)
Prior1 = list(nu=p+2,
V=(p+2)*diag(p-1),
ntrees = 100,
kfac = 2.0,
pbd = 1.0,
pb = 0.5,
alpha = 0.99,
beta =  2.0,
nc = 200,
priorindep = FALSE)
out <- mpbart(as.factor(y) ~ 1 | .,
train.data =  traindata,
test.data =  testdata,
base = NULL,
varying = NULL,
sep = NULL,
Prior = Prior1,
Mcmc = Mcmc1,
seedvalue = 99)
ProjectLibrary <- "C:/Users/Christine/Dropbox/Bereket"
setwd(paste0(ProjectLibrary))
library(devtools)
library(roxygen2)
library(RcppArmadillo)
library(rstudioapi)
#RcppArmadillo.package.skeleton("mpbart")
setwd(paste0(ProjectLibrary,"/mpbart/R"))
devtools::load_all()
devtools::document()
set.seed(64)
library(mpbart)
p=3
train_wave = mlbench.waveform(300)
test_wave = mlbench.waveform(500)
traindata = data.frame(train_wave$x, y = train_wave$classes)
testdata = data.frame(test_wave$x, y = test_wave$classes)
sigma0 = diag(p-1)
burn = 100
ndraws <- 200 # a higher number such as 1500 is better#'#
Mcmc1=list(sigma0=sigma0, burn = burn, ndraws = ndraws)
Prior1 = list(nu=p+2,
V=(p+2)*diag(p-1),
ntrees = 100,
kfac = 2.0,
pbd = 1.0,
pb = 0.5,
alpha = 0.99,
beta =  2.0,
nc = 200,
priorindep = FALSE)
out <- mpbart(as.factor(y) ~ 1 | .,
train.data =  traindata,
test.data =  testdata,
base = NULL,
varying = NULL,
sep = NULL,
Prior = Prior1,
Mcmc = Mcmc1,
seedvalue = 99)
out$ptestpred
out$ptrainpred
names(out)
ddocument())
ddocument()
document()
sigma0 = diag(p-1)
burn = 100
ndraws <- 200 # a higher number such as 1500 is better#'#
Mcmc1=list(sigma0=sigma0, burn = burn, ndraws = ndraws)
Prior1 = list(nu=p+2,
V=(p+2)*diag(p-1),
ntrees = 10,
kfac = 2.0,
pbd = 1.0,
pb = 0.5,
alpha = 0.99,
beta =  2.0,
nc = 200,
priorindep = FALSE)
out <- mpbart(as.factor(y) ~ 1 | .,
train.data =  traindata,
test.data =  testdata,
base = NULL,
varying = NULL,
sep = NULL,
Prior = Prior1,
Mcmc = Mcmc1,
seedvalue = 99)
set.seed(32)
sigma0 = diag(p-1)
burn = 100
ndraws <- 200 # a higher number such as 1500 is better#'#
Mcmc1=list(sigma0=sigma0, burn = burn, ndraws = ndraws)
Prior1 = list(nu=p+2,
V=(p+2)*diag(p-1),
ntrees = 10,
kfac = 2.0,
pbd = 1.0,
pb = 0.5,
alpha = 0.99,
beta =  2.0,
nc = 200,
priorindep = FALSE)
out <- mpbart(as.factor(y) ~ 1 | .,
train.data =  traindata,
test.data =  testdata,
base = NULL,
varying = NULL,
sep = NULL,
Prior = Prior1,
Mcmc = Mcmc1,
seedvalue = 99)
set.seed(32)
sigma0 = diag(p-1)
burn = 100
ndraws <- 200 # a higher number such as 1500 is better#'#
Mcmc1=list(sigma0=sigma0, burn = burn, ndraws = ndraws)
Prior1 = list(nu=p+2,
V=(p+2)*diag(p-1),
ntrees = 10,
kfac = 2.0,
pbd = 1.0,
pb = 0.5,
alpha = 0.99,
beta =  2.0,
nc = 200,
priorindep = FALSE)
out <- mpbart(as.factor(y) ~ 1 | .,
train.data =  traindata,
test.data =  testdata,
base = NULL,
varying = NULL,
sep = NULL,
Prior = Prior1,
Mcmc = Mcmc1,
seedvalue = 99)
ProjectLibrary <- "C:/Users/Christine/Dropbox/Bereket"
setwd(paste0(ProjectLibrary))
library(devtools)
library(roxygen2)
library(RcppArmadillo)
library(rstudioapi)
#RcppArmadillo.package.skeleton("mpbart")
setwd(paste0(ProjectLibrary,"/mpbart/R"))
devtools::load_all()
devtools::document()
set.seed(64)
library(mpbart)
p=3
train_wave = mlbench.waveform(300)
test_wave = mlbench.waveform(500)
traindata = data.frame(train_wave$x, y = train_wave$classes)
testdata = data.frame(test_wave$x, y = test_wave$classes)
set.seed(32)
sigma0 = diag(p-1)
burn = 100
ndraws <- 200 # a higher number such as 1500 is better#'#
Mcmc1=list(sigma0=sigma0, burn = burn, ndraws = ndraws)
Prior1 = list(nu=p+2,
V=(p+2)*diag(p-1),
ntrees = 10,
kfac = 2.0,
pbd = 1.0,
pb = 0.5,
alpha = 0.99,
beta =  2.0,
nc = 200,
priorindep = FALSE)
out <- mpbart(as.factor(y) ~ 1 | .,
train.data =  traindata,
test.data =  testdata,
base = NULL,
varying = NULL,
sep = NULL,
Prior = Prior1,
Mcmc = Mcmc1,
seedvalue = 99)
ProjectLibrary <- "C:/Users/Christine/Dropbox/Bereket"
setwd(paste0(ProjectLibrary))
library(devtools)
library(roxygen2)
library(RcppArmadillo)
library(rstudioapi)
#RcppArmadillo.package.skeleton("mpbart")
setwd(paste0(ProjectLibrary,"/mpbart/R"))
devtools::load_all()
devtools::document()
set.seed(64)
library(mpbart)
p=3
train_wave = mlbench.waveform(300)
test_wave = mlbench.waveform(500)
traindata = data.frame(train_wave$x, y = train_wave$classes)
testdata = data.frame(test_wave$x, y = test_wave$classes)
set.seed(32)
sigma0 = diag(p-1)
burn = 100
ndraws <- 200 # a higher number such as 1500 is better#'#
Mcmc1=list(sigma0=sigma0, burn = burn, ndraws = ndraws)
Prior1 = list(nu=p+2,
V=(p+2)*diag(p-1),
ntrees = 10,
kfac = 2.0,
pbd = 1.0,
pb = 0.5,
alpha = 0.99,
beta =  2.0,
nc = 200,
priorindep = FALSE)
out <- mpbart(as.factor(y) ~ 1 | .,
train.data =  traindata,
test.data =  testdata,
base = NULL,
varying = NULL,
sep = NULL,
Prior = Prior1,
Mcmc = Mcmc1,
seedvalue = 99)
matrix(c(8.0226e+018, -3.3332e+018,
-3.3332e+018,  1.3848e+018), ncol = 2)
chol(matrix(c(8.0226e+018, -3.3332e+018,
-3.3332e+018,  1.3848e+018), ncol = 2))
chol(matrix(c(8.0226e+018, -3.3332e+018,
-3.3332e+018,  1.3848e+018)/e10, ncol = 2))
chol(matrix(c(8.0226e+018, -3.3332e+018,
-3.3332e+018,  1.3848e+018)/1e+10, ncol = 2))
chol(matrix(c(8.0226, -3.3332,
-3.3332,  1.3848), ncol = 2))
eigen(matrix(c(8.0226, -3.3332,
-3.3332,  1.3848), ncol = 2))
ProjectLibrary <- "C:/Users/Christine/Dropbox/Bereket"
setwd(paste0(ProjectLibrary))
library(devtools)
library(roxygen2)
library(RcppArmadillo)
library(rstudioapi)
#RcppArmadillo.package.skeleton("mpbart")
setwd(paste0(ProjectLibrary,"/mpbart/R"))
devtools::load_all()
devtools::document()
set.seed(64)
library(mpbart)
p=3
train_wave = mlbench.waveform(300)
test_wave = mlbench.waveform(500)
traindata = data.frame(train_wave$x, y = train_wave$classes)
testdata = data.frame(test_wave$x, y = test_wave$classes)
set.seed(32)
sigma0 = diag(p-1)
burn = 100
ndraws <- 200 # a higher number such as 1500 is better#'#
Mcmc1=list(sigma0=sigma0, burn = burn, ndraws = ndraws)
Prior1 = list(nu=p+2,
V=(p+2)*diag(p-1),
ntrees = 10,
kfac = 2.0,
pbd = 1.0,
pb = 0.5,
alpha = 0.99,
beta =  2.0,
nc = 200,
priorindep = FALSE)
out <- mpbart(as.factor(y) ~ 1 | .,
train.data =  traindata,
test.data =  testdata,
base = NULL,
varying = NULL,
sep = NULL,
Prior = Prior1,
Mcmc = Mcmc1,
seedvalue = 99)
ProjectLibrary <- "C:/Users/Christine/Dropbox/Bereket"
setwd(paste0(ProjectLibrary))
library(devtools)
library(roxygen2)
library(RcppArmadillo)
library(rstudioapi)
#RcppArmadillo.package.skeleton("mpbart")
setwd(paste0(ProjectLibrary,"/mpbart/R"))
devtools::load_all()
devtools::document()
set.seed(64)
library(mpbart)
p=3
train_wave = mlbench.waveform(300)
test_wave = mlbench.waveform(500)
traindata = data.frame(train_wave$x, y = train_wave$classes)
testdata = data.frame(test_wave$x, y = test_wave$classes)
set.seed(32)
sigma0 = diag(p-1)
burn = 100
ndraws <- 200 # a higher number such as 1500 is better#'#
Mcmc1=list(sigma0=sigma0, burn = burn, ndraws = ndraws)
Prior1 = list(nu=p+2,
V=(p+2)*diag(p-1),
ntrees = 10,
kfac = 2.0,
pbd = 1.0,
pb = 0.5,
alpha = 0.99,
beta =  2.0,
nc = 200,
priorindep = FALSE)
out <- mpbart(as.factor(y) ~ 1 | .,
train.data =  traindata,
test.data =  testdata,
base = NULL,
varying = NULL,
sep = NULL,
Prior = Prior1,
Mcmc = Mcmc1,
seedvalue = 99)
document()
set.seed(32)
sigma0 = diag(p-1)
burn = 100
ndraws <- 200 # a higher number such as 1500 is better#'#
Mcmc1=list(sigma0=sigma0, burn = burn, ndraws = ndraws)
Prior1 = list(nu=p+2,
V=(p+2)*diag(p-1),
ntrees = 10,
kfac = 2.0,
pbd = 1.0,
pb = 0.5,
alpha = 0.99,
beta =  2.0,
nc = 200,
priorindep = FALSE)
out <- mpbart(as.factor(y) ~ 1 | .,
train.data =  traindata,
test.data =  testdata,
base = NULL,
varying = NULL,
sep = NULL,
Prior = Prior1,
Mcmc = Mcmc1,
seedvalue = 99)
names(out)
out$predicted_class_test
out$predicted_class_train
out$class_prob_train
document()
set.seed(32)
sigma0 = diag(p-1)
burn = 100
ndraws <- 200 # a higher number such as 1500 is better#'#
Mcmc1=list(sigma0=sigma0, burn = burn, ndraws = ndraws)
Prior1 = list(nu=p+2,
V=(p+2)*diag(p-1),
ntrees = 10,
kfac = 2.0,
pbd = 1.0,
pb = 0.5,
alpha = 0.99,
beta =  2.0,
nc = 200,
priorindep = FALSE)
out <- mpbart(as.factor(y) ~ 1 | .,
train.data =  traindata,
test.data =  testdata,
base = NULL,
varying = NULL,
sep = NULL,
Prior = Prior1,
Mcmc = Mcmc1,
seedvalue = 99)
out$class_prob_train
document()
set.seed(32)
sigma0 = diag(p-1)
burn = 100
ndraws <- 200 # a higher number such as 1500 is better#'#
Mcmc1=list(sigma0=sigma0, burn = burn, ndraws = ndraws)
Prior1 = list(nu=p+2,
V=(p+2)*diag(p-1),
ntrees = 10,
kfac = 2.0,
pbd = 1.0,
pb = 0.5,
alpha = 0.99,
beta =  2.0,
nc = 200,
priorindep = FALSE)
out <- mpbart(as.factor(y) ~ 1 | .,
train.data =  traindata,
test.data =  testdata,
base = NULL,
varying = NULL,
sep = NULL,
Prior = Prior1,
Mcmc = Mcmc1,
seedvalue = 99)
document()
set.seed(32)
sigma0 = diag(p-1)
burn = 100
ndraws <- 200 # a higher number such as 1500 is better#'#
Mcmc1=list(sigma0=sigma0, burn = burn, ndraws = ndraws)
Prior1 = list(nu=p+2,
V=(p+2)*diag(p-1),
ntrees = 10,
kfac = 2.0,
pbd = 1.0,
pb = 0.5,
alpha = 0.99,
beta =  2.0,
nc = 200,
priorindep = FALSE)
out <- mpbart(as.factor(y) ~ 1 | .,
train.data =  traindata,
test.data =  testdata,
base = NULL,
varying = NULL,
sep = NULL,
Prior = Prior1,
Mcmc = Mcmc1,
seedvalue = 99)
document()
set.seed(32)
sigma0 = diag(p-1)
burn = 100
ndraws <- 200 # a higher number such as 1500 is better#'#
Mcmc1=list(sigma0=sigma0, burn = burn, ndraws = ndraws)
Prior1 = list(nu=p+2,
V=(p+2)*diag(p-1),
ntrees = 100,
kfac = 2.0,
pbd = 1.0,
pb = 0.5,
alpha = 0.99,
beta =  2.0,
nc = 200,
priorindep = FALSE)
out <- mpbart(as.factor(y) ~ 1 | .,
train.data =  traindata,
test.data =  testdata,
base = NULL,
varying = NULL,
sep = NULL,
Prior = Prior1,
Mcmc = Mcmc1,
seedvalue = 99)
out$class_prob_train
out$predicted_class_train
out$predicted_class_test
table(out$predicted_class_test)
table(out$predicted_class_test,test_wave$classes)
help(mpbart)
table(traindata$y, out$predicted_class_train)
table(traindata$y==out$predicted_class_train)/
sum(table(traindata$y==out$predicted_class_train))
#confusion matrix test
table(testdata$y, out$predicted_class_test)
test_err <- sum(testdata$y != out$predicted_class_test)/
sum(table(testdata$y == out$predicted_class_test))
cat("test error :", test_err )
## Not run: library(mpbart)
set.seed(9)
data(Fishing)
table(Fishing$mode)
folds = cvFolds(n = nrow(Fishing), K = 10, R = 1,
type = "random");
Fishing$fold = sample(folds$which)
Fishing$logincome = log(Fishing$income)
FishingTrain <- Fishing[Fishing$fold != 1,]
FishingTest <- Fishing[Fishing$fold == 1,]
burn <- 100
ndraws <- 200 # a higher number such as 1500 is better
p = 4
#'four choices
sigma0 <- diag(p-1)
Mcmc1 <- list(sigma0=sigma0, burn = burn, ndraws = ndraws)
Prior1 <- list( nu=p-1,
V = .5*diag(p-1),
ntrees = 5, # ntrees >= 50 is probably more appropriate
kfac = 3.0,
pbd = 1.0,
pb = 0.5,
alpha = 0.95,
beta =  3.0,
nc = 100,
priorindep = FALSE,
minobsnode = 10)
out <- mpbart(as.factor(mode) ~ price + catch | logincome,
train.data =  FishingTrain,
test.data =  FishingTest,
base = 'boat',
varying = 2:9,
sep = ".",
Prior = Prior1,
Mcmc = Mcmc1,
seedvalue = 99)
table(as.character(FishingTrain$mode), as.character(out$predicted_class_train))
table(as.character(FishingTest$mode), as.character(out$predicted_class_test))
test_err <- sum(as.character(FishingTest$mode) !=
as.character(out$predicted_class_test))/length(FishingTest$mode)
cat("test error :", test_err )
devtools::clean_dll()
